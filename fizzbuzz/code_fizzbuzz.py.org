#!/usr/bin/env python
import sys,copy

test_cases = open(sys.argv[1], 'r')

def getXList(x,n):
    counter = 1
    #base = x
    #xCounter = copy.deepcopy(x)  
    xList = []

    while( x*counter <= n):
        #print "counter=%s; xCounter=%s" % (counter,xCounter)
        xList.append(x*counter)
        counter += 1
        #xCounter = base*counter 
    return xList
 
def getYList(y,n):
    counter = 1
    #base = y
    #yCounter = copy.deepcopy(y)
    yList = []

    while( y*counter <= n):
        #print "counter=%s; yCounter=%s" % (counter,yCounter)
        yList.append(y*counter)
        counter += 1
        #yCounter = base*counter 
    return yList

for test in test_cases:
    test = test.strip('\n')
    x = int(test.split()[0])
    y = int(test.split()[1])
    count = int(test.split()[2])
    print "Processing case: X=%s, Y=%s, count=%s" % (x,y,count)

    x_list = getXList(x,count)
    y_list = getYList(y,count)

    fb = [ val for val in x_list if val in y_list ]
    fizz = [ val for val in x_list if val not in fb ]  
    buzz = [ val for val in y_list if val not in fb ]  

    #print "x_list: %s\ny_list: %s\nFB: %s\nFizz: %s\nBuzz: %s" % (x_list,y_list,fb,fizz,buzz)
    output = []
    
    for cnt in range(count):
        if cnt+1 in fizz:
            output.append('F')
        elif cnt+1 in buzz:
            output.append('B')
        elif cnt+1 in fb:
            output.append('FB')
        else:
            output.append(cnt+1)
        
    print output
#    return output
    
test_cases.close()
